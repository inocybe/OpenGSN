//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Copyright 2009-2011 École de technologie supérieure, Communication Research Centre Canada, Inocybe Technologies Inc. and 6837247 CANADA Inc.
//
// 
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" paddingLeft="10" paddingTop="10"
		 borderStyle="none" creationComplete="init()">
	
	<mx:Style source="../style/gsn.css"/>
	
	<mx:Script>
		<![CDATA[
			import actionscript.Host;			
			import mx.collections.ArrayCollection;
			import mx.events.ListEvent;
			
			[Bindable]
			private var listVM:ArrayCollection;
			
			[Bindable] 
			public var hostData:ArrayCollection = new ArrayCollection([
				{Component:"Memory (%)", Used:0, Free:0},
				{Component:"CPU (%)", Used:0, Free:0},
			]); 
			
			[Bindable] 
			public var hostPowerData:ArrayCollection = new ArrayCollection([
				{Component:"Power (%)", Green:0, nonGreen:0}
			]);

			
			private function init():void{
				doInit();
			}
			
			private function doInit():void{
				if( hostTable != null && hostTable.dataProvider.length > 0){
					
					hostTable.selectedIndex = 0;
					
					listVM = this.parentApplication.getListVM(hostTable.selectedItem.ip);
					
					hostId.text = hostTable.selectedItem.resourceId;
					hostName.text = hostTable.selectedItem.name;
					hostState.text = hostTable.selectedItem.state;
					hostAddress.text = hostTable.selectedItem.ip;
					
					var host:Host = this.parentApplication.getHost(hostTable.selectedItem.resourceId);
					
					hostLocation.text = host.location;
					hostOs.text = host.os;
					hostCpu.text = host.cpu;
					hostNbreCpu.text = host.nbreCpu;
					hostSpeed.text = host.speed;
					hostMemory.text = host.totalMemory;
					hostFreeMemory.text = host.freeMemory;
					hostCpuIdleTime.text = host.cpuIdleTime;
					hostCpuNiceTime.text = host.cpuNiceTime;
					hostCpuHardwareTime.text = host.cpuHardwareTime;
					hostCpuIOTime.text = host.cpuIOTime;
					hostCpuSystemTime.text = host.cpuSystemTime;
					hostCpuSoftwareTime.text = host.cpuSoftwareTime;
					hostCpuStealTime.text = host.cpuStealTime;
					hostCpuUserTime.text = host.cpuUserTime;
							
					var cpuIdle:Number = Number(host.cpuIdleTime.substr(0,host.cpuIdleTime.length-1));
					var freeMemory:Number = Number(host.freeMemory.substr(0,host.freeMemory.length-1));
					var totalMemory:Number = Number(host.totalMemory.substr(0,host.totalMemory.length-3));
							
					hostData.getItemAt(0)['Used'] = ((totalMemory - freeMemory) / totalMemory) *100;
					hostData.getItemAt(0)['Free'] = (freeMemory / totalMemory) * 100;
					hostData.getItemAt(1)['Used'] = 100 - cpuIdle;
					hostData.getItemAt(1)['Free'] = cpuIdle;
							
					hostPowerData.getItemAt(0)['Green'] = host.percentGreen;
					hostPowerData.getItemAt(0)['nonGreen'] = 100 - host.percentGreen;
							
							
					if(hostChart != null){
						hostChart.dataProvider = hostData;
					}
					if(hostPowerChart != null){
						hostPowerChart.dataProvider = hostPowerData;
					}
					
				}
			}
			
			private function updateView(e:Event):void{
				doInit();
			}
			
			public function updateVM():void{
				if(hostTable != null && hostTable.selectedItem != null){
					listVM = this.parentApplication.getListVM(hostTable.selectedItem.ip);
					if(listVmTable != null){
						listVmTable.dataProvider = listVM;
					}
				}
			}
			
			private function hostTableClick(event:ListEvent):void{
				
				listVM = this.parentApplication.getListVM(hostTable.selectedItem.ip);
				
				hostId.text = event.currentTarget.selectedItem.resourceId;
				hostName.text = event.currentTarget.selectedItem.name;
				hostState.text = event.currentTarget.selectedItem.state;
				hostAddress.text = event.currentTarget.selectedItem.ip;
				
				var host:Host = this.parentApplication.getHost(event.currentTarget.selectedItem.resourceId);
				
				hostLocation.text = host.location;
				hostOs.text = host.os;
				hostCpu.text = host.cpu;
				hostNbreCpu.text = host.nbreCpu;
				hostSpeed.text = host.speed;
				hostMemory.text = host.totalMemory;
				hostFreeMemory.text = host.freeMemory;
				hostCpuIdleTime.text = host.cpuIdleTime;
				hostCpuNiceTime.text = host.cpuNiceTime;
				hostCpuHardwareTime.text = host.cpuHardwareTime;
				hostCpuIOTime.text = host.cpuIOTime;
				hostCpuSystemTime.text = host.cpuSystemTime;
				hostCpuSoftwareTime.text = host.cpuSoftwareTime;
				hostCpuStealTime.text = host.cpuStealTime;
				hostCpuUserTime.text = host.cpuUserTime;
						
				var cpuIdle:Number = Number(host.cpuIdleTime.substr(0,host.cpuIdleTime.length-1));
				var freeMemory:Number = Number(host.freeMemory.substr(0,host.freeMemory.length-1));
				var totalMemory:Number = Number(host.totalMemory.substr(0,host.totalMemory.length-3));
						
				hostData.getItemAt(0)['Used'] = ((totalMemory - freeMemory) / totalMemory) *100;
				hostData.getItemAt(0)['Free'] = (freeMemory / totalMemory) * 100;
				hostData.getItemAt(1)['Used'] = 100 - cpuIdle;
				hostData.getItemAt(1)['Free'] = cpuIdle;
						
				hostPowerData.getItemAt(0)['Green'] = host.percentGreen;
				hostPowerData.getItemAt(0)['nonGreen'] = 100 - host.percentGreen;
						
				if(hostChart != null){
					hostChart.dataProvider = hostData;
				}
				if(hostPowerChart != null){
					hostPowerChart.dataProvider = hostPowerData;
				}
				
			}
			
			public function refresh():void{
				if(hostTable != null){
					hostTable.dataProvider = this.parentApplication.listHost;
					doInit();
				}
			}
			
		]]>
	</mx:Script>
	
	<!-- Define custom colors for chart -->
	<mx:SolidColor id="c1" color="#00ff00" />
	<mx:SolidColor id="c2" color="#ff0000" />
	
	<mx:Label text="Hosts" styleName="titleOne"/>
	
	<mx:DataGrid id="hostTable" dataProvider="{this.parentApplication.listHost}" width="100%" itemClick="hostTableClick(event)">
		<mx:columns>	
			<mx:DataGridColumn headerText="Name" dataField="name"/>
			<mx:DataGridColumn headerText="State" dataField="state"/>
			<mx:DataGridColumn headerText="IP Address" dataField="ip"/>
		</mx:columns>
	</mx:DataGrid>
	
	<mx:Spacer height="20"/>
	
	<mx:TabNavigator width="100%" borderStyle="solid" resizeToContent="true">
	
		<mx:HBox label="Host Summary" verticalAlign="middle" width="100%">
			<mx:Form>
				<mx:FormHeading label="Host Summary"/>
				<mx:FormItem label="ID" labelStyleName="formLabel">
					<mx:TextInput id="hostId" text="---" editable="false" width="200"/>
				</mx:FormItem>
				<mx:FormItem label="Name" labelStyleName="formLabel">
					<mx:TextInput id="hostName" text="---" editable="false" width="200"/>
				</mx:FormItem>
				<mx:FormItem label="State" labelStyleName="formLabel">
					<mx:TextInput id="hostState" text="---" editable="false" width="200"/>
				</mx:FormItem>
				<mx:FormItem label="IP Address" labelStyleName="formLabel">
					<mx:TextInput id="hostAddress" text="---" editable="false" width="200"/>
				</mx:FormItem>
				<mx:FormItem label="Location" labelStyleName="formLabel">
					<mx:TextInput id="hostLocation" text="---" editable="false" width="200"/>
				</mx:FormItem>
				<mx:FormItem label="OS" labelStyleName="formLabel">
					<mx:TextInput id="hostOs" text="---" editable="false" width="200"/>
				</mx:FormItem>
				<mx:FormItem label="CPU" labelStyleName="formLabel">
					<mx:TextInput id="hostCpu" text="---" editable="false" width="200"/>
				</mx:FormItem>
				<mx:FormItem label="CPU Speed" labelStyleName="formLabel">
					<mx:TextInput id="hostSpeed" text="---" editable="false" width="200"/>
				</mx:FormItem>
				<mx:FormItem label="CPU Number" labelStyleName="formLabel">
					<mx:TextInput id="hostNbreCpu" text="---" editable="false" width="200"/>
				</mx:FormItem>
				<mx:FormItem label="Total Memory" labelStyleName="formLabel">
					<mx:TextInput id="hostMemory" text="---" editable="false" width="200"/>
				</mx:FormItem>
				<mx:FormItem label="Free Memory" labelStyleName="formLabel">
					<mx:TextInput id="hostFreeMemory" text="---" editable="false" width="200"/>
				</mx:FormItem>
			</mx:Form>
			
			<mx:Spacer height="100%"/>
			<mx:VRule/>
			<mx:Spacer height="100%"/>
			
			<mx:Form>
				<mx:FormHeading label="Host CPU Snaphot"/>
				<mx:FormItem label="CPU Idle Time" labelStyleName="formLabel">
					<mx:TextInput id="hostCpuIdleTime" text="---" editable="false" width="100"/>
				</mx:FormItem>
				<mx:FormItem label="CPU Nice Time" labelStyleName="formLabel">
					<mx:TextInput id="hostCpuNiceTime" text="---" editable="false" width="100"/>
				</mx:FormItem>
				<mx:FormItem label="CPU Hardware time" labelStyleName="formLabel">
					<mx:TextInput id="hostCpuHardwareTime" text="---" editable="false" width="100"/>
				</mx:FormItem>
				<mx:FormItem label="CPU IO Time" labelStyleName="formLabel">
					<mx:TextInput id="hostCpuIOTime" text="---" editable="false" width="100"/>
				</mx:FormItem>
				<mx:FormItem label="CPU System Time" labelStyleName="formLabel">
					<mx:TextInput id="hostCpuSystemTime" text="---" editable="false" width="100"/>
				</mx:FormItem>
				<mx:FormItem label="CPU Software Time" labelStyleName="formLabel">
					<mx:TextInput id="hostCpuSoftwareTime" text="---" editable="false" width="100"/>
				</mx:FormItem>
				<mx:FormItem label="CPU Steal Time" labelStyleName="formLabel">
					<mx:TextInput id="hostCpuStealTime" text="---" editable="false" width="100"/>
				</mx:FormItem>
				<mx:FormItem label="CPU User Time" labelStyleName="formLabel">
					<mx:TextInput id="hostCpuUserTime" text="---" editable="false" width="100"/>
				</mx:FormItem>
			</mx:Form>
		</mx:HBox>
		
		<mx:VBox width="100%" label="Host Performance Snapshot">
			<mx:FormHeading label="Host Performance Snapshot"/>
			<mx:Spacer height="10"/>
			<mx:HBox width="100%">
				<mx:BarChart id="hostChart" dataProvider="{hostData}" height="200" showDataTips="true">
					<mx:verticalAxis>
						<mx:CategoryAxis 
							dataProvider="{hostData}" 
							categoryField="Component"
							/>
					</mx:verticalAxis>
					<mx:series>
						<mx:BarSeries 
							yField="Component" 
							xField="Used" 
							displayName="Used"
							fill="{c2}"
							>
							<mx:stroke>
								<mx:Stroke 
									color="0x808080" 
									weight="2" 
									alpha=".8"
									/>
							</mx:stroke>
						</mx:BarSeries>
						<mx:BarSeries 
							yField="Component" 
							xField="Free" 
							displayName="Free"
							fill="{c1}"
							>
							<mx:stroke>
								<mx:Stroke 
									color="0xC0C0C0" 
									weight="2" 
									alpha=".8"
									/>
							</mx:stroke>
						</mx:BarSeries>
					</mx:series>
				</mx:BarChart>
				<mx:Legend dataProvider="{hostChart}"/>
			</mx:HBox>
		</mx:VBox>
		
		<mx:VBox width="100%" label="Host Power Information">
			<mx:FormHeading label="Host Power Information"/>
			<mx:Spacer height="10"/>
			<mx:HBox width="100%">
				<mx:BarChart id="hostPowerChart" dataProvider="{hostPowerData}" height="200" showDataTips="true">
					<mx:verticalAxis>
						<mx:CategoryAxis 
							dataProvider="{hostPowerData}" 
							categoryField="Component"
							/>
					</mx:verticalAxis>
					<mx:series>
						<mx:BarSeries 
							yField="Component" 
							xField="nonGreen" 
							displayName="Non Green Power"
							fill="{c2}"
							>
							<mx:stroke>
								<mx:Stroke 
									color="0x808080" 
									weight="2" 
									alpha=".8"
									/>
							</mx:stroke>
						</mx:BarSeries>
						<mx:BarSeries 
							yField="Component" 
							xField="Green" 
							displayName="Green Power"
							fill="{c1}"
							>
							<mx:stroke>
								<mx:Stroke 
									color="0xC0C0C0" 
									weight="2" 
									alpha=".8"
									/>
							</mx:stroke>
						</mx:BarSeries>
					</mx:series>
				</mx:BarChart>
				<mx:Legend dataProvider="{hostPowerChart}"/>
			</mx:HBox>
		</mx:VBox>
		
		<mx:VBox label="Hosted VMs" width="100%" height="100%" paddingLeft="20" paddingBottom="20">
			<mx:FormHeading x="75" y="10" label="VMs in the selected host"/>
			<mx:DataGrid id="listVmTable" width="90%" dataProvider="{listVM}">
				<mx:columns>
					<mx:DataGridColumn headerText="VM Name" dataField="displayedName"/>
					<mx:DataGridColumn headerText="Platform" dataField="os"/>
					<mx:DataGridColumn headerText="Status" dataField="status"/>
					<mx:DataGridColumn headerText="IP Address" dataField="vmIp"/>
				</mx:columns>
			</mx:DataGrid>
		</mx:VBox>
		
	</mx:TabNavigator>
	
</mx:VBox>
